AWSTemplateFormatVersion: 2010-09-09
Description: >-
  crypto-bot

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  EnvironmentParameter:
    Type: String
    Description: Environment where the stack is deployed
    Default: test
    AllowedValues:
      - test
      - prod
  TracingParameter:
    Description: Boolean to enable or disable tracing
    Type: String
    Default: false
  BinanceUrlParameter:
    Description: URL of the Binance API
    Type: String
    Default: https://testnet.binance.vision/api
  BinanceSecretNameParameter:
    Description: Name of the Binance secret stored in Secrets Manager
    Type: String
    Default: test-BinanceTrading-Secret
  BinanceSecretEncryptionKeyParameter:
    Description: Encryption key used to encrypt the Binance secret in Secrets Manager (either a key id 'key/xxx' or an alias 'alias/xxx')
    Type: String
    Default: alias/aws/secretsmanager

Conditions:
  TracingCondition: !Equals [ !Ref TracingParameter, true ]

Mappings:
  EnvironmentMap:
    test:
      DcaTradingConfig: '{ "baseAsset": "BTC", "quoteAsset": "BUSD", "quoteAssetQuantity": 25, "tradeAssets": [ { "asset": "ETH|BNB", "percentage": 0.50 } ] }'
      DcaTradingSchedule: cron(0 18 ? * * *)
      AvailableSymbols: BNB#BUSD,BNB#USDT,BTC#BUSD,BTC#USDT
      UpdateAllCandlesticksSchedule: rate(1 minute)
    prod:
      DcaTradingConfig: '{ "baseAsset": "BTC", "quoteAsset": "EUR", "quoteAssetQuantity": 25, "tradeAssets": [ { "asset": "ETH", "percentage": 0.28 }, { "asset":"XRP", "percentage": 0.28 }, { "asset": "ADA|MATIC", "percentage": 0.20 } ] }'
      DcaTradingSchedule: cron(0 18 ? * 1 *)
      AvailableSymbols: BNB#BUSD,BTC#BUSD,ETH#BUSD,XRP#BUSD
      UpdateAllCandlesticksSchedule: rate(1 minute)

Globals:
  Function:
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 30
    AutoPublishAlias: Live
    Tracing: !If [ TracingCondition, Active, PassThrough ]
    Environment:
      Variables:
        ENV: !Ref EnvironmentParameter
        REGION: !Ref AWS::Region
        TRACING: !Ref TracingParameter

Resources:
  DcaTradingFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: DCA trading function
      CodeUri: dist/webpack/dca-trading-handler
      Handler: app.handler
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          BINANCE_URL: !Ref BinanceUrlParameter
          BINANCE_SECRET_NAME: !Ref BinanceSecretNameParameter
          DCA_TRADING_TABLE_NAME: !Ref DcaTradingTable
          ORDER_TABLE_NAME: !Ref OrderTable
          DCA_TRADING_CONFIG: !FindInMap [ EnvironmentMap, !Ref EnvironmentParameter, DcaTradingConfig ]
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: !FindInMap [ EnvironmentMap, !Ref EnvironmentParameter, DcaTradingSchedule ]
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BinanceSecretNameParameter}*
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${BinanceSecretEncryptionKeyParameter}
        - DynamoDBReadPolicy:
            TableName: !Ref DcaTradingTable
        - DynamoDBWritePolicy:
            TableName: !Ref DcaTradingTable
        - DynamoDBWritePolicy:
            TableName: !Ref OrderTable

  InitializeAllCandlesticksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Initialize all candlesticks function
      CodeUri: dist/webpack/initialize-all-candlesticks-handler
      Handler: app.handler
      Timeout: 300
      ReservedConcurrentExecutions: 1
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          BINANCE_URL: !Ref BinanceUrlParameter
          BINANCE_SECRET_NAME: !Ref BinanceSecretNameParameter
          CANDLESTICK_TABLE_NAME: !Ref CandlestickTable
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BinanceSecretNameParameter}*
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${BinanceSecretEncryptionKeyParameter}
        - DynamoDBWritePolicy:
            TableName: !Ref CandlestickTable

  UpdateAllCandlesticksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Update all candlesticks function
      CodeUri: dist/webpack/update-all-candlesticks-handler
      Handler: app.handler
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          BINANCE_URL: !Ref BinanceUrlParameter
          BINANCE_SECRET_NAME: !Ref BinanceSecretNameParameter
          AVAILABLE_SYMBOLS: !FindInMap [ EnvironmentMap, !Ref EnvironmentParameter, AvailableSymbols ]
          CANDLESTICK_TABLE_NAME: !Ref CandlestickTable
          UPDATED_CANDLESTICKS_QUEUE_URL: !Ref UpdatedCandlesticksQueue
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: !FindInMap [ EnvironmentMap, !Ref EnvironmentParameter, UpdateAllCandlesticksSchedule ]
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BinanceSecretNameParameter}*
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${BinanceSecretEncryptionKeyParameter}
        - DynamoDBWritePolicy:
            TableName: !Ref CandlestickTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt UpdatedCandlesticksQueue.QueueName

  PublishAllActiveStrategiesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Publish all active strategies function
      CodeUri: dist/webpack/publish-all-active-strategies-handler
      Handler: app.handler
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          STRATEGY_TABLE_NAME: !Ref StrategyTable
          ACTIVE_STRATEGIES_QUEUE_URL: !Ref ActiveStrategiesQueue
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Enabled: true
            Queue: !GetAtt UpdatedCandlesticksQueue.Arn
            BatchSize: 10
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref StrategyTable
        - SQSPollerPolicy:
            QueueName: !GetAtt UpdatedCandlesticksQueue.QueueName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt ActiveStrategiesQueue.QueueName

  EvaluateStrategyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Evaluate strategy function
      CodeUri: dist/webpack/evaluate-strategy-handler
      Handler: app.handler
      MemorySize: 1024
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          BINANCE_URL: !Ref BinanceUrlParameter
          BINANCE_SECRET_NAME: !Ref BinanceSecretNameParameter
          CANDLESTICK_TABLE_NAME: !Ref CandlestickTable
          STRATEGY_TABLE_NAME: !Ref StrategyTable
          ORDER_TABLE_NAME: !Ref OrderTable
          PROCESSED_STRATEGY_STEP_QUEUE_URL: !Ref ProcessedStrategyStepQueue
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Enabled: true
            Queue: !GetAtt ActiveStrategiesQueue.Arn
            BatchSize: 1
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BinanceSecretNameParameter}*
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${BinanceSecretEncryptionKeyParameter}
        - DynamoDBReadPolicy:
            TableName: !Ref CandlestickTable
        - DynamoDBReadPolicy:
            TableName: !Ref StrategyTable
        - DynamoDBWritePolicy:
            TableName: !Ref StrategyTable
        - DynamoDBWritePolicy:
            TableName: !Ref OrderTable
        - SQSPollerPolicy:
            QueueName: !GetAtt ActiveStrategiesQueue.QueueName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt ProcessedStrategyStepQueue.QueueName

  DcaTradingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S

  CandlestickTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S

  StrategyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: symbolStatusPk
          AttributeType: S
        - AttributeName: symbolStatusSk
          AttributeType: S
        - AttributeName: stepsListPk
          AttributeType: S
        - AttributeName: stepsListSk
          AttributeType: N
      GlobalSecondaryIndexes:
        - IndexName: SymbolStatus-Index
          KeySchema:
            - AttributeName: symbolStatusPk
              KeyType: HASH
            - AttributeName: symbolStatusSk
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
        - IndexName: StepsList-Index
          KeySchema:
            - AttributeName: stepsListPk
              KeyType: HASH
            - AttributeName: stepsListSk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  OrderTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S

  UpdatedCandlesticksQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      VisibilityTimeout: 90
      MessageRetentionPeriod: 60
      DeduplicationScope: messageGroup
      FifoThroughputLimit: perMessageGroupId

  ActiveStrategiesQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      VisibilityTimeout: 90
      MessageRetentionPeriod: 60
      DeduplicationScope: messageGroup
      FifoThroughputLimit: perMessageGroupId

  ProcessedStrategyStepQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      VisibilityTimeout: 90
      MessageRetentionPeriod: 60
      DeduplicationScope: messageGroup
      FifoThroughputLimit: perMessageGroupId

Outputs:
  DcaTradingFunctionName:
    Description: DCA trading function name
    Value: !Ref DcaTradingFunction
  DcaTradingFunctionArn:
    Description: DCA trading function ARN
    Value: !GetAtt DcaTradingFunction.Arn

  InitializeAllCandlesticksFunctionName:
    Description: Initialize all candlesticks function name
    Value: !Ref InitializeAllCandlesticksFunction
  InitializeAllCandlesticksFunctionArn:
    Description: Initialize all candlesticks function name
    Value: !Ref InitializeAllCandlesticksFunction

  UpdateAllCandlesticksFunctionName:
    Description: Update all candlesticks function name
    Value: !Ref UpdateAllCandlesticksFunction
  UpdateAllCandlesticksFunctionArn:
    Description: Update all candlesticks function name
    Value: !Ref UpdateAllCandlesticksFunction

  PublishAllActiveStrategiesFunctionName:
    Description: Publish all active strategies function name
    Value: !Ref PublishAllActiveStrategiesFunction
  PublishAllActiveStrategiesFunctionArn:
    Description: Publish all active strategies function ARN
    Value: !GetAtt PublishAllActiveStrategiesFunction.Arn

  EvaluateStrategyFunctionName:
    Description: Evaluate strategy function name
    Value: !Ref EvaluateStrategyFunction
  EvaluateStrategyFunctionArn:
    Description: Evaluate strategy function ARN
    Value: !GetAtt EvaluateStrategyFunction.Arn

  DcaTradingTableName:
    Description: DCA Trading table name
    Value: !Ref DcaTradingTable
  DcaTradingTableArn:
    Description: DCA Trading table ARN
    Value: !GetAtt DcaTradingTable.Arn

  CandlestickTableName:
    Description: Candlestick table name
    Value: !Ref CandlestickTable
  CandlestickTableArn:
    Description: Candlestick table ARN
    Value: !GetAtt CandlestickTable.Arn

  StrategyTableName:
    Description: Strategy table name
    Value: !Ref StrategyTable
  StrategyTableArn:
    Description: Strategy table ARN
    Value: !GetAtt StrategyTable.Arn

  OrderTableName:
    Description: Order table name
    Value: !Ref OrderTable
  OrderTableArn:
    Description: Order table ARN
    Value: !GetAtt OrderTable.Arn

  StrategyTableName:
    Description: Strategy table name
    Value: !Ref StrategyTable
  StrategyTableArn:
    Description: Strategy table ARN
    Value: !GetAtt StrategyTable.Arn

  UpdatedCandlesticksQueueName:
    Description: Updated candlesticks queue name
    Value: !GetAtt UpdatedCandlesticksQueue.QueueName
  UpdatedCandlesticksQueueArn:
    Description: Updated candlesticks queue ARN
    Value: !GetAtt UpdatedCandlesticksQueue.Arn
  UpdatedCandlesticksQueueUrl:
    Description: Updated candlesticks queue URL
    Value: !Ref UpdatedCandlesticksQueue

  ActiveStrategiesQueueName:
    Description: Active strategies queue name
    Value: !GetAtt ActiveStrategiesQueue.QueueName
  ActiveStrategiesQueueArn:
    Description: Active strategies queue ARN
    Value: !GetAtt ActiveStrategiesQueue.Arn
  ActiveStrategiesQueueUrl:
    Description: Active strategies queue URL
    Value: !Ref ActiveStrategiesQueue

  ProcessedStrategyStepQueueName:
    Description: Processed strategy step queue name
    Value: !GetAtt ProcessedStrategyStepQueue.QueueName
  ProcessedStrategyStepQueueArn:
    Description: Processed strategy step queue ARN
    Value: !GetAtt ProcessedStrategyStepQueue.Arn
  ProcessedStrategyStepQueueUrl:
    Description: Processed strategy step queue URL
    Value: !Ref ProcessedStrategyStepQueue